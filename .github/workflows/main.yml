name: PR Approval Check

on:
  pull_request_review:
    types: [submitted, edited, dismissed]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check-approvals:
    runs-on: ubuntu-latest
    steps:
      - name: Check PR approvals
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const primaryReviewers = ["seancampbell3161", "jerrymannel"]; // GitHub usernames

            const { data: reviews } = await github.rest.pulls.listReviews({
              owner,
              repo,
              pull_number: prNumber
            });

            const approvals = new Map();

            for (const review of reviews) {
              approvals.set(review.user.login, review.state);
            }

            let approvedByPrimary = false;
            let totalNonPrimaryApprovals = 0;

            for (const [user, state] of approvals.entries()) {
              if (state !== "APPROVED") continue;
              if (primaryReviewers.includes(user)) {
                approvedByPrimary = true;
                break;
              } else {
                totalNonPrimaryApprovals++;
              }
            }

            const readyToMerge = approvedByPrimary || totalNonPrimaryApprovals >= 2;

            const status = readyToMerge ? 'success' : 'failure';
            const description = readyToMerge
              ? 'PR is approved and ready to merge'
              : 'Waiting for required approvals';

            // Set a commit status
            const sha = context.payload.pull_request.head.sha;
            await github.rest.repos.createCommitStatus({
              owner,
              repo,
              sha,
              state: status,
              context: 'PR Approval Check',
              description
            });
